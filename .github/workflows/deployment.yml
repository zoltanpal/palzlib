name: Deploy to Server

on:
  workflow_dispatch:
    inputs:
#      branch:
#        description: "Branch to deploy"
#        required: true
#        default: "main"
      job:
        description: "Select which job to run"
        required: true
        default: "all"
        type: choice
        options:
          - all
          - tests
          - deploy


jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-deps.outputs.cache-hit }}  # Pass cache state to other jobs

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache Dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry  # Cache Poetry dependencies
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Poetry
        if: steps.cache-deps.outputs.cache-hit != 'true'  # Skip if cache exists
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Install dependencies
        run: poetry install

  tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: setup
    if: inputs.job == 'all' || inputs.job == 'tests'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore Cached Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Run Unit Tests
        run: poetry run python -m pytest ./tests -vv


  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: [setup, tests]  # Ensure setup & tests run first
    if: inputs.job == 'all' || inputs.job == 'deploy'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore Cached Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

#      - name: Deploy to Server
#        uses: appleboy/scp-action@master
#        with:
#          host: ${{ secrets.SERVER_HOST }}
#          username: ${{ secrets.SERVER_USER }}
#          key: ${{ secrets.SERVER_SSH_KEY }}
#          source: "dist/*"
#          target: "${{ secrets.SERVER_DEPLOYMENT_PATH }}"

      - name: Verify Deployment
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            ls -lh ${{ secrets.SERVER_DEPLOYMENT_PATH }}
            echo "Deployment successful!"
